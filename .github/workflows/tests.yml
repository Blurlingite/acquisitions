name: Tests

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        id: run-tests
        env:
          NODE_ENV: test
          NODE_OPTIONS: --experimental-vm-modules
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          # Fallback to an in-memory DB if not provided
          export DATABASE_URL="${DATABASE_URL:-sqlite::memory:}"
          npm test -- --coverage
        continue-on-error: true

      - name: Upload coverage reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: |
            coverage/**
            coverage*.*
          retention-days: 30
          if-no-files-found: warn

      - name: Annotate test failures
        if: steps.run-tests.outcome == 'failure'
        run: |
          echo "::error title=Tests failed::One or more tests failed. Re-run locally with 'npm test' and inspect the failing test output."

      - name: Test summary
        if: always()
        shell: bash
        run: |
          {
            echo "## Test Run Summary";
            if [ "${{ steps.run-tests.outcome }}" = "success" ]; then
              echo "✅ Tests passed.";
            else
              echo "❌ Tests failed.";
            fi
            if [ -f coverage/coverage-summary.json ]; then
              echo "";
              echo "Coverage report generated and uploaded as an artifact (30 days retention).";
            else
              echo "";
              echo "No coverage summary found. Ensure your test runner outputs coverage to ./coverage.";
            fi
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Fail job on test failures
        if: steps.run-tests.outcome == 'failure'
        run: exit 1
